package com.github.forax.smartass.grammar.parser;

/** 
 *  This class is generated - please do not edit it 
 */
public enum ProductionEnum {
  instrs_optional_0_empty,
instrs_optional_0_instrs,
script,
eoi_eol,
eoi_semi,
instrs_rec,
instrs_instr_eoi,
instrs_instr,
instr_expr,
doc_plus_1_element,
doc_plus_1_rec,
instr_doc_expr,
instr_return,
instr_throw,
instrs_optional_2_empty,
instrs_optional_2_instrs,
block,
block_param_block,
parameter_star_3_element,
parameter_star_3_rec,
parameter_star_3_empty,
parameter_star_3_through,
block_param_lambda,
parameter_hint_quote_id,
parameter_hint_id_id,
parameter_id,
entry_key_value,
entry_hint_id,
entry_hint_quote,
entry_expr,
selector_id,
selector_quote,
expr_value,
expr_text,
expr_quote,
expr_parens,
expr_var_access,
expr_var_assignment,
expr_field_access,
expr_block,
parameter_plus_4_element,
parameter_plus_4_rec,
expr_lambda,
expr_star_5_element,
expr_star_5_rec,
expr_star_5_empty,
expr_star_5_through,
block_param_optional_6_empty,
block_param_optional_6_block_param,
expr_funcall,
expr_star_7_element,
expr_star_7_rec,
expr_star_7_empty,
expr_star_7_through,
block_param_optional_8_empty,
block_param_optional_8_block_param,
expr_mthcall,
expr_fieldcall,
expr_while,
expr_if,
expr_ifelse,
expr_star_9_element,
expr_star_9_rec,
expr_star_9_empty,
expr_star_9_through,
expr_list,
entry_star_10_element,
entry_star_10_rec,
entry_star_10_empty,
entry_star_10_through,
expr_map,
expr_unary_not,
expr_unary_neg,
expr_unary_plus,
expr_binary_add,
expr_binary_sub,
expr_binary_mul,
expr_binary_div,
expr_binary_mod,
expr_binary_eq,
expr_binary_ne,
expr_binary_lt,
expr_binary_le,
expr_binary_gt,
expr_binary_ge
;
}